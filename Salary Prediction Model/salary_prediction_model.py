# -*- coding: utf-8 -*-
"""Salary Prediction Model

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1z0jmziTSqE-xG2XE-M0mzuwEGO9QNvFa
"""

import os
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score

def welcome():
  print("Welcome to salary Prediction System")
  print("Press ENTER key to Proceed")
  input()
def checkcsv():
  csv_files=[]
  cur_dir=os.getcwd()
  content_lsit=os.listdir(cur_dir)
  for x in content_lsit:
    if x.split('.')[-1]=='csv':
      csv_files.append(x)
  if len(csv_files)==0:
    return 'No csv file in the directory'
  else:
    return csv_files
def display_and_select_csv(csv_files):
  i=0
  for file_name in csv_files:
    print (i,'...',file_name)
    i+=1
  return csv_files[int(input("Select File to create ML model"))]
def graph(X_train,Y_train,regressionObject,X_test,Y_test,y_pred):
  plt.scatter(X_train,Y_train,color='red',label='training data')
  plt.plot(X_train,regressionObject.predict(X_train),color='blue',label='Best FIt')
  plt.scatter(X_test,Y_test,color='green',label='test data')
  plt.scatter(X_test, y_pred,color='black',label='pred test data')
  plt.title("Salary vs Experience")
  plt.xlabel('years of Experience')
  plt.ylabel('salary')
  plt.legend()
  plt.show()
def main ():
  welcome()
  try:
    csv_files=checkcsv()
    if csv_files=='No csv file in the Directory':
      raise FileNotFoundError('No csv file in the directory')
    csv_file=display_and_select_csv(csv_files)
    print(csv_file,'is selected')
    print('Reading csv file')
    print('Creating Dataset')
    dataset=pd.read_csv(csv_file)
    print('Dataset Created')
    X=dataset.iloc[:,:-1].values
    Y=dataset.iloc[:,-1].values
    s=float(input("Enter test data sixe (between 0 and 1)"))
    X_train, X_test, Y_train,Y_test=train_test_split(X,Y,test_size=s)
    print("Model Creation in progression")
    regressionObject=LinearRegression()
    regressionObject.fit(X_train,Y_train)
    print("model is Created")
    print("Press ENTER key to predict test data in trained model")
    input()
    y_pred=regressionObject.predict(X_test)
    i=0
    print(X_test,'  ...',Y_test,'  ...',y_pred)
    while i<len(X_test):
      print(X_test[i], '...', Y_test[i],'...', y_pred[i])
      i+=1

    print ("press ENTER key to see above result in graphical format")
    input()

    graph(X_train, Y_train, regressionObject, X_test, Y_test, y_pred)
    r2=r2_score(Y_test,y_pred)
    print("Our Model is %2.2f%% acurate"%(r2*100))
    print("now you can predict Salsry of an employee using our model")
    print("\nEnter experience in years of the candidates, seperated by comma")
    exp=[eval(e) for e in input().split(',') ]
    ex=[]
    for x in exp:
      ex.append([x])
    experience = np.array(ex)
    salaries=regressionObject.predict(experience)
    plt.scatter(experience,salaries, color='black')
    plt.xlabel('Years of Experience')
    plt.ylabel('Salaries')
    plt.show()
    d= pd.DataFrame({'Experience':exp,'Salaries':salaries})
    print(d)
  except FileNotFoundError:
    print('No csv file in the directory')
    print("press ENTER key to exit")
    input()
    exit()
if __name__=="__main__":

  main()

